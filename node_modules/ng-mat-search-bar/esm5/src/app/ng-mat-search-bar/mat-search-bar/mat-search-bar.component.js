import * as tslib_1 from "tslib";
import { animate, state, style, transition, trigger } from '@angular/animations';
import { Component, EventEmitter, forwardRef, Output, ViewChild, Input } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { AbstractControlValueAccessor } from '../util/abstract-value-accessor';
var MatSearchBarComponent = /** @class */ (function (_super) {
    tslib_1.__extends(MatSearchBarComponent, _super);
    function MatSearchBarComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.placeholder = '';
        _this.onBlur = new EventEmitter();
        _this.onClose = new EventEmitter();
        _this.onEnter = new EventEmitter();
        _this.onFocus = new EventEmitter();
        _this.onOpen = new EventEmitter();
        _this.searchVisible = false;
        return _this;
    }
    MatSearchBarComponent_1 = MatSearchBarComponent;
    MatSearchBarComponent.prototype.close = function () {
        this.searchVisible = false;
        this.value = '';
        this.updateChanges();
        this.onClose.emit();
    };
    MatSearchBarComponent.prototype.open = function () {
        this.searchVisible = true;
        this.inputElement.nativeElement.focus();
        this.onOpen.emit();
    };
    MatSearchBarComponent.prototype.onBlurring = function (searchValue) {
        if (!searchValue) {
            this.searchVisible = false;
        }
        this.onBlur.emit(searchValue);
    };
    MatSearchBarComponent.prototype.onEnterring = function (searchValue) {
        this.onEnter.emit(searchValue);
    };
    MatSearchBarComponent.prototype.onFocussing = function (searchValue) {
        this.onFocus.emit(searchValue);
    };
    var MatSearchBarComponent_1;
    tslib_1.__decorate([
        ViewChild('input', { static: false })
    ], MatSearchBarComponent.prototype, "inputElement", void 0);
    tslib_1.__decorate([
        Input()
    ], MatSearchBarComponent.prototype, "formControl", void 0);
    tslib_1.__decorate([
        Input()
    ], MatSearchBarComponent.prototype, "placeholder", void 0);
    tslib_1.__decorate([
        Output()
    ], MatSearchBarComponent.prototype, "onBlur", void 0);
    tslib_1.__decorate([
        Output()
    ], MatSearchBarComponent.prototype, "onClose", void 0);
    tslib_1.__decorate([
        Output()
    ], MatSearchBarComponent.prototype, "onEnter", void 0);
    tslib_1.__decorate([
        Output()
    ], MatSearchBarComponent.prototype, "onFocus", void 0);
    tslib_1.__decorate([
        Output()
    ], MatSearchBarComponent.prototype, "onOpen", void 0);
    MatSearchBarComponent = MatSearchBarComponent_1 = tslib_1.__decorate([
        Component({
            selector: 'mat-search-bar',
            template: "<mat-form-field *ngIf=\"!formControl\" class=\"mat-search_field\" [@slideInOut]=\"searchVisible\">\n  <input #input matInput type=\"text\" [placeholder]=\"placeholder\" [(ngModel)]=\"value\" (ngModelChange)=\"updateChanges()\"\n    (blur)=\"onBlurring(input.value)\" (keyup.enter)=\"onEnterring(input.value)\" (focus)=\"onFocussing(input.value)\" />\n</mat-form-field>\n\n<!-- FORM CONTROL WAY -->\n<mat-form-field *ngIf=\"formControl\" class=\"mat-search_field\" [@slideInOut]=\"searchVisible\">\n  <input #input matInput type=\"text\" [placeholder]=\"placeholder\" [formControl]=\"formControl\" (blur)=\"onBlurring(input.value)\"\n    (keyup.enter)=\"onEnterring(input.value)\" (focus)=\"onFocussing(input.value)\" />\n</mat-form-field>\n\n\n<span class=\"mat-search_icons\" [class.mat-search_icons--active]=\"searchVisible\">\n  <mat-icon class=\"mat-search_icon-close\" (click)=\"close()\" matRipple>close</mat-icon>\n  <mat-icon class=\"mat-search_icon-search\" (click)=\"open()\" matRipple>search</mat-icon>\n</span>\n",
            animations: [
                trigger('slideInOut', [
                    state('true', style({ width: '*' })),
                    state('false', style({ width: '0' })),
                    transition('true => false', animate('300ms ease-in')),
                    transition('false => true', animate('300ms ease-out'))
                ])
            ],
            providers: [
                {
                    provide: NG_VALUE_ACCESSOR,
                    useExisting: forwardRef(function () { return MatSearchBarComponent_1; }),
                    multi: true
                }
            ],
            styles: [":host{position:relative;display:flex;flex-direction:row;align-items:center;justify-content:flex-end;width:24px;height:24px}.mat-search_field{position:absolute;z-index:1;padding:0 24px 0 0}.mat-search_icons{display:block;margin:0;padding:0;position:absolute;top:0;left:0}.mat-search_icons:hover{cursor:pointer}.mat-search_icons .mat-search_icon-close,.mat-search_icons .mat-search_icon-search{transition:.2s cubic-bezier(.4,0,.2,1);position:absolute;top:0;left:0;z-index:2;border-radius:50%}.mat-search_icons .mat-search_icon-close,.mat-search_icons.mat-search_icons--active .mat-search_icon-search{opacity:0;transform:rotate(225deg)}.mat-search_icons.mat-search_icons--active .mat-search_icon-close{opacity:1;z-index:3;visibility:visible;transform:rotate(360deg)}"]
        })
    ], MatSearchBarComponent);
    return MatSearchBarComponent;
}(AbstractControlValueAccessor));
export { MatSearchBarComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0LXNlYXJjaC1iYXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctbWF0LXNlYXJjaC1iYXIvIiwic291cmNlcyI6WyJzcmMvYXBwL25nLW1hdC1zZWFyY2gtYmFyL21hdC1zZWFyY2gtYmFyL21hdC1zZWFyY2gtYmFyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNMLE9BQU8sRUFDUCxLQUFLLEVBQ0wsS0FBSyxFQUNMLFVBQVUsRUFDVixPQUFPLEVBQ1IsTUFBTSxxQkFBcUIsQ0FBQztBQUM3QixPQUFPLEVBQ0wsU0FBUyxFQUVULFlBQVksRUFDWixVQUFVLEVBQ1YsTUFBTSxFQUNOLFNBQVMsRUFDVCxLQUFLLEVBRU4sTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLGlCQUFpQixFQUEwQixNQUFNLGdCQUFnQixDQUFDO0FBRTNFLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBc0IvRTtJQUEyQyxpREFFMUM7SUF0QkQ7UUFBQSxxRUErREM7UUFyQ1UsaUJBQVcsR0FBRyxFQUFFLENBQUM7UUFFaEIsWUFBTSxHQUFHLElBQUksWUFBWSxFQUFVLENBQUM7UUFDcEMsYUFBTyxHQUFHLElBQUksWUFBWSxFQUFRLENBQUM7UUFDbkMsYUFBTyxHQUFHLElBQUksWUFBWSxFQUFVLENBQUM7UUFDckMsYUFBTyxHQUFHLElBQUksWUFBWSxFQUFVLENBQUM7UUFDckMsWUFBTSxHQUFHLElBQUksWUFBWSxFQUFRLENBQUM7UUFFNUMsbUJBQWEsR0FBRyxLQUFLLENBQUM7O0lBNkJ4QixDQUFDOzhCQTNDWSxxQkFBcUI7SUFnQnpCLHFDQUFLLEdBQVo7UUFDRSxJQUFJLENBQUMsYUFBYSxHQUFHLEtBQUssQ0FBQztRQUMzQixJQUFJLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQztRQUNoQixJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7UUFDckIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN0QixDQUFDO0lBRU0sb0NBQUksR0FBWDtRQUNFLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDO1FBQzFCLElBQUksQ0FBQyxZQUFZLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ3hDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDckIsQ0FBQztJQUVELDBDQUFVLEdBQVYsVUFBVyxXQUFtQjtRQUM1QixJQUFHLENBQUMsV0FBVyxFQUFFO1lBQ2YsSUFBSSxDQUFDLGFBQWEsR0FBRyxLQUFLLENBQUM7U0FDNUI7UUFDRCxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUNoQyxDQUFDO0lBRUQsMkNBQVcsR0FBWCxVQUFZLFdBQW1CO1FBQzdCLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ2pDLENBQUM7SUFFRCwyQ0FBVyxHQUFYLFVBQVksV0FBbUI7UUFDN0IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDakMsQ0FBQzs7SUF2Q3NDO1FBQXRDLFNBQVMsQ0FBQyxPQUFPLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLENBQUM7K0RBQTBCO0lBRXZEO1FBQVIsS0FBSyxFQUFFOzhEQUEwQjtJQUN6QjtRQUFSLEtBQUssRUFBRTs4REFBa0I7SUFFaEI7UUFBVCxNQUFNLEVBQUU7eURBQXFDO0lBQ3BDO1FBQVQsTUFBTSxFQUFFOzBEQUFvQztJQUNuQztRQUFULE1BQU0sRUFBRTswREFBc0M7SUFDckM7UUFBVCxNQUFNLEVBQUU7MERBQXNDO0lBQ3JDO1FBQVQsTUFBTSxFQUFFO3lEQUFtQztJQVpqQyxxQkFBcUI7UUFwQmpDLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxnQkFBZ0I7WUFDMUIsNGdDQUE4QztZQUU5QyxVQUFVLEVBQUU7Z0JBQ1YsT0FBTyxDQUFDLFlBQVksRUFBRTtvQkFDcEIsS0FBSyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQztvQkFDcEMsS0FBSyxDQUFDLE9BQU8sRUFBRSxLQUFLLENBQUMsRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQztvQkFDckMsVUFBVSxDQUFDLGVBQWUsRUFBRSxPQUFPLENBQUMsZUFBZSxDQUFDLENBQUM7b0JBQ3JELFVBQVUsQ0FBQyxlQUFlLEVBQUUsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUM7aUJBQ3ZELENBQUM7YUFDSDtZQUNELFNBQVMsRUFBRTtnQkFDVDtvQkFDRSxPQUFPLEVBQUUsaUJBQWlCO29CQUMxQixXQUFXLEVBQUUsVUFBVSxDQUFDLGNBQU0sT0FBQSx1QkFBcUIsRUFBckIsQ0FBcUIsQ0FBQztvQkFDcEQsS0FBSyxFQUFFLElBQUk7aUJBQ1o7YUFDRjs7U0FDRixDQUFDO09BQ1cscUJBQXFCLENBMkNqQztJQUFELDRCQUFDO0NBQUEsQUEzQ0QsQ0FBMkMsNEJBQTRCLEdBMkN0RTtTQTNDWSxxQkFBcUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBhbmltYXRlLFxuICBzdGF0ZSxcbiAgc3R5bGUsXG4gIHRyYW5zaXRpb24sXG4gIHRyaWdnZXJcbn0gZnJvbSAnQGFuZ3VsYXIvYW5pbWF0aW9ucyc7XG5pbXBvcnQge1xuICBDb21wb25lbnQsXG4gIEVsZW1lbnRSZWYsXG4gIEV2ZW50RW1pdHRlcixcbiAgZm9yd2FyZFJlZixcbiAgT3V0cHV0LFxuICBWaWV3Q2hpbGQsXG4gIElucHV0LFxuICBPbkluaXRcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOR19WQUxVRV9BQ0NFU1NPUiwgRm9ybUdyb3VwLCBGb3JtQ29udHJvbCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuaW1wb3J0IHsgQWJzdHJhY3RDb250cm9sVmFsdWVBY2Nlc3NvciB9IGZyb20gJy4uL3V0aWwvYWJzdHJhY3QtdmFsdWUtYWNjZXNzb3InO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdtYXQtc2VhcmNoLWJhcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9tYXQtc2VhcmNoLWJhci5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL21hdC1zZWFyY2gtYmFyLmNvbXBvbmVudC5zY3NzJ10sXG4gIGFuaW1hdGlvbnM6IFtcbiAgICB0cmlnZ2VyKCdzbGlkZUluT3V0JywgW1xuICAgICAgc3RhdGUoJ3RydWUnLCBzdHlsZSh7IHdpZHRoOiAnKicgfSkpLFxuICAgICAgc3RhdGUoJ2ZhbHNlJywgc3R5bGUoeyB3aWR0aDogJzAnIH0pKSxcbiAgICAgIHRyYW5zaXRpb24oJ3RydWUgPT4gZmFsc2UnLCBhbmltYXRlKCczMDBtcyBlYXNlLWluJykpLFxuICAgICAgdHJhbnNpdGlvbignZmFsc2UgPT4gdHJ1ZScsIGFuaW1hdGUoJzMwMG1zIGVhc2Utb3V0JykpXG4gICAgXSlcbiAgXSxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogTkdfVkFMVUVfQUNDRVNTT1IsXG4gICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBNYXRTZWFyY2hCYXJDb21wb25lbnQpLFxuICAgICAgbXVsdGk6IHRydWVcbiAgICB9XG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgTWF0U2VhcmNoQmFyQ29tcG9uZW50IGV4dGVuZHMgQWJzdHJhY3RDb250cm9sVmFsdWVBY2Nlc3NvcjxcbnN0cmluZ1xuPiB7XG4gIEBWaWV3Q2hpbGQoJ2lucHV0JywgeyBzdGF0aWM6IGZhbHNlIH0pIGlucHV0RWxlbWVudDogRWxlbWVudFJlZjtcblxuICBASW5wdXQoKSBmb3JtQ29udHJvbDogRm9ybUNvbnRyb2w7XG4gIEBJbnB1dCgpIHBsYWNlaG9sZGVyID0gJyc7XG5cbiAgQE91dHB1dCgpIG9uQmx1ciA9IG5ldyBFdmVudEVtaXR0ZXI8c3RyaW5nPigpO1xuICBAT3V0cHV0KCkgb25DbG9zZSA9IG5ldyBFdmVudEVtaXR0ZXI8dm9pZD4oKTtcbiAgQE91dHB1dCgpIG9uRW50ZXIgPSBuZXcgRXZlbnRFbWl0dGVyPHN0cmluZz4oKTtcbiAgQE91dHB1dCgpIG9uRm9jdXMgPSBuZXcgRXZlbnRFbWl0dGVyPHN0cmluZz4oKTtcbiAgQE91dHB1dCgpIG9uT3BlbiA9IG5ldyBFdmVudEVtaXR0ZXI8dm9pZD4oKTtcblxuICBzZWFyY2hWaXNpYmxlID0gZmFsc2U7XG5cbiAgcHVibGljIGNsb3NlKCk6IHZvaWQge1xuICAgIHRoaXMuc2VhcmNoVmlzaWJsZSA9IGZhbHNlO1xuICAgIHRoaXMudmFsdWUgPSAnJztcbiAgICB0aGlzLnVwZGF0ZUNoYW5nZXMoKTtcbiAgICB0aGlzLm9uQ2xvc2UuZW1pdCgpO1xuICB9XG5cbiAgcHVibGljIG9wZW4oKTogdm9pZCB7XG4gICAgdGhpcy5zZWFyY2hWaXNpYmxlID0gdHJ1ZTtcbiAgICB0aGlzLmlucHV0RWxlbWVudC5uYXRpdmVFbGVtZW50LmZvY3VzKCk7XG4gICAgdGhpcy5vbk9wZW4uZW1pdCgpO1xuICB9XG5cbiAgb25CbHVycmluZyhzZWFyY2hWYWx1ZTogc3RyaW5nKSB7XG4gICAgaWYoIXNlYXJjaFZhbHVlKSB7XG4gICAgICB0aGlzLnNlYXJjaFZpc2libGUgPSBmYWxzZTtcbiAgICB9XG4gICAgdGhpcy5vbkJsdXIuZW1pdChzZWFyY2hWYWx1ZSk7XG4gIH1cblxuICBvbkVudGVycmluZyhzZWFyY2hWYWx1ZTogc3RyaW5nKSB7XG4gICAgdGhpcy5vbkVudGVyLmVtaXQoc2VhcmNoVmFsdWUpO1xuICB9XG5cbiAgb25Gb2N1c3Npbmcoc2VhcmNoVmFsdWU6IHN0cmluZykge1xuICAgIHRoaXMub25Gb2N1cy5lbWl0KHNlYXJjaFZhbHVlKTtcbiAgfVxufVxuIl19