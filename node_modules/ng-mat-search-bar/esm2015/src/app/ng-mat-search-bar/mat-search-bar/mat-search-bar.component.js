import * as tslib_1 from "tslib";
var MatSearchBarComponent_1;
import { animate, state, style, transition, trigger } from '@angular/animations';
import { Component, EventEmitter, forwardRef, Output, ViewChild, Input } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { AbstractControlValueAccessor } from '../util/abstract-value-accessor';
let MatSearchBarComponent = MatSearchBarComponent_1 = class MatSearchBarComponent extends AbstractControlValueAccessor {
    constructor() {
        super(...arguments);
        this.placeholder = '';
        this.onBlur = new EventEmitter();
        this.onClose = new EventEmitter();
        this.onEnter = new EventEmitter();
        this.onFocus = new EventEmitter();
        this.onOpen = new EventEmitter();
        this.searchVisible = false;
    }
    close() {
        this.searchVisible = false;
        this.value = '';
        this.updateChanges();
        this.onClose.emit();
    }
    open() {
        this.searchVisible = true;
        this.inputElement.nativeElement.focus();
        this.onOpen.emit();
    }
    onBlurring(searchValue) {
        if (!searchValue) {
            this.searchVisible = false;
        }
        this.onBlur.emit(searchValue);
    }
    onEnterring(searchValue) {
        this.onEnter.emit(searchValue);
    }
    onFocussing(searchValue) {
        this.onFocus.emit(searchValue);
    }
};
tslib_1.__decorate([
    ViewChild('input', { static: false })
], MatSearchBarComponent.prototype, "inputElement", void 0);
tslib_1.__decorate([
    Input()
], MatSearchBarComponent.prototype, "formControl", void 0);
tslib_1.__decorate([
    Input()
], MatSearchBarComponent.prototype, "placeholder", void 0);
tslib_1.__decorate([
    Output()
], MatSearchBarComponent.prototype, "onBlur", void 0);
tslib_1.__decorate([
    Output()
], MatSearchBarComponent.prototype, "onClose", void 0);
tslib_1.__decorate([
    Output()
], MatSearchBarComponent.prototype, "onEnter", void 0);
tslib_1.__decorate([
    Output()
], MatSearchBarComponent.prototype, "onFocus", void 0);
tslib_1.__decorate([
    Output()
], MatSearchBarComponent.prototype, "onOpen", void 0);
MatSearchBarComponent = MatSearchBarComponent_1 = tslib_1.__decorate([
    Component({
        selector: 'mat-search-bar',
        template: "<mat-form-field *ngIf=\"!formControl\" class=\"mat-search_field\" [@slideInOut]=\"searchVisible\">\n  <input #input matInput type=\"text\" [placeholder]=\"placeholder\" [(ngModel)]=\"value\" (ngModelChange)=\"updateChanges()\"\n    (blur)=\"onBlurring(input.value)\" (keyup.enter)=\"onEnterring(input.value)\" (focus)=\"onFocussing(input.value)\" />\n</mat-form-field>\n\n<!-- FORM CONTROL WAY -->\n<mat-form-field *ngIf=\"formControl\" class=\"mat-search_field\" [@slideInOut]=\"searchVisible\">\n  <input #input matInput type=\"text\" [placeholder]=\"placeholder\" [formControl]=\"formControl\" (blur)=\"onBlurring(input.value)\"\n    (keyup.enter)=\"onEnterring(input.value)\" (focus)=\"onFocussing(input.value)\" />\n</mat-form-field>\n\n\n<span class=\"mat-search_icons\" [class.mat-search_icons--active]=\"searchVisible\">\n  <mat-icon class=\"mat-search_icon-close\" (click)=\"close()\" matRipple>close</mat-icon>\n  <mat-icon class=\"mat-search_icon-search\" (click)=\"open()\" matRipple>search</mat-icon>\n</span>\n",
        animations: [
            trigger('slideInOut', [
                state('true', style({ width: '*' })),
                state('false', style({ width: '0' })),
                transition('true => false', animate('300ms ease-in')),
                transition('false => true', animate('300ms ease-out'))
            ])
        ],
        providers: [
            {
                provide: NG_VALUE_ACCESSOR,
                useExisting: forwardRef(() => MatSearchBarComponent_1),
                multi: true
            }
        ],
        styles: [":host{position:relative;display:flex;flex-direction:row;align-items:center;justify-content:flex-end;width:24px;height:24px}.mat-search_field{position:absolute;z-index:1;padding:0 24px 0 0}.mat-search_icons{display:block;margin:0;padding:0;position:absolute;top:0;left:0}.mat-search_icons:hover{cursor:pointer}.mat-search_icons .mat-search_icon-close,.mat-search_icons .mat-search_icon-search{transition:.2s cubic-bezier(.4,0,.2,1);position:absolute;top:0;left:0;z-index:2;border-radius:50%}.mat-search_icons .mat-search_icon-close,.mat-search_icons.mat-search_icons--active .mat-search_icon-search{opacity:0;transform:rotate(225deg)}.mat-search_icons.mat-search_icons--active .mat-search_icon-close{opacity:1;z-index:3;visibility:visible;transform:rotate(360deg)}"]
    })
], MatSearchBarComponent);
export { MatSearchBarComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0LXNlYXJjaC1iYXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctbWF0LXNlYXJjaC1iYXIvIiwic291cmNlcyI6WyJzcmMvYXBwL25nLW1hdC1zZWFyY2gtYmFyL21hdC1zZWFyY2gtYmFyL21hdC1zZWFyY2gtYmFyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE9BQU8sRUFDTCxPQUFPLEVBQ1AsS0FBSyxFQUNMLEtBQUssRUFDTCxVQUFVLEVBQ1YsT0FBTyxFQUNSLE1BQU0scUJBQXFCLENBQUM7QUFDN0IsT0FBTyxFQUNMLFNBQVMsRUFFVCxZQUFZLEVBQ1osVUFBVSxFQUNWLE1BQU0sRUFDTixTQUFTLEVBQ1QsS0FBSyxFQUVOLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxpQkFBaUIsRUFBMEIsTUFBTSxnQkFBZ0IsQ0FBQztBQUUzRSxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQXNCL0UsSUFBYSxxQkFBcUIsNkJBQWxDLE1BQWEscUJBQXNCLFNBQVEsNEJBRTFDO0lBdEJEOztRQTBCVyxnQkFBVyxHQUFHLEVBQUUsQ0FBQztRQUVoQixXQUFNLEdBQUcsSUFBSSxZQUFZLEVBQVUsQ0FBQztRQUNwQyxZQUFPLEdBQUcsSUFBSSxZQUFZLEVBQVEsQ0FBQztRQUNuQyxZQUFPLEdBQUcsSUFBSSxZQUFZLEVBQVUsQ0FBQztRQUNyQyxZQUFPLEdBQUcsSUFBSSxZQUFZLEVBQVUsQ0FBQztRQUNyQyxXQUFNLEdBQUcsSUFBSSxZQUFZLEVBQVEsQ0FBQztRQUU1QyxrQkFBYSxHQUFHLEtBQUssQ0FBQztJQTZCeEIsQ0FBQztJQTNCUSxLQUFLO1FBQ1YsSUFBSSxDQUFDLGFBQWEsR0FBRyxLQUFLLENBQUM7UUFDM0IsSUFBSSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUM7UUFDaEIsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDdEIsQ0FBQztJQUVNLElBQUk7UUFDVCxJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQztRQUMxQixJQUFJLENBQUMsWUFBWSxDQUFDLGFBQWEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUN4QyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3JCLENBQUM7SUFFRCxVQUFVLENBQUMsV0FBbUI7UUFDNUIsSUFBRyxDQUFDLFdBQVcsRUFBRTtZQUNmLElBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSyxDQUFDO1NBQzVCO1FBQ0QsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUVELFdBQVcsQ0FBQyxXQUFtQjtRQUM3QixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUNqQyxDQUFDO0lBRUQsV0FBVyxDQUFDLFdBQW1CO1FBQzdCLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ2pDLENBQUM7Q0FDRixDQUFBO0FBeEN3QztJQUF0QyxTQUFTLENBQUMsT0FBTyxFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxDQUFDOzJEQUEwQjtBQUV2RDtJQUFSLEtBQUssRUFBRTswREFBMEI7QUFDekI7SUFBUixLQUFLLEVBQUU7MERBQWtCO0FBRWhCO0lBQVQsTUFBTSxFQUFFO3FEQUFxQztBQUNwQztJQUFULE1BQU0sRUFBRTtzREFBb0M7QUFDbkM7SUFBVCxNQUFNLEVBQUU7c0RBQXNDO0FBQ3JDO0lBQVQsTUFBTSxFQUFFO3NEQUFzQztBQUNyQztJQUFULE1BQU0sRUFBRTtxREFBbUM7QUFaakMscUJBQXFCO0lBcEJqQyxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsZ0JBQWdCO1FBQzFCLDRnQ0FBOEM7UUFFOUMsVUFBVSxFQUFFO1lBQ1YsT0FBTyxDQUFDLFlBQVksRUFBRTtnQkFDcEIsS0FBSyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQztnQkFDcEMsS0FBSyxDQUFDLE9BQU8sRUFBRSxLQUFLLENBQUMsRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQztnQkFDckMsVUFBVSxDQUFDLGVBQWUsRUFBRSxPQUFPLENBQUMsZUFBZSxDQUFDLENBQUM7Z0JBQ3JELFVBQVUsQ0FBQyxlQUFlLEVBQUUsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUM7YUFDdkQsQ0FBQztTQUNIO1FBQ0QsU0FBUyxFQUFFO1lBQ1Q7Z0JBQ0UsT0FBTyxFQUFFLGlCQUFpQjtnQkFDMUIsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyx1QkFBcUIsQ0FBQztnQkFDcEQsS0FBSyxFQUFFLElBQUk7YUFDWjtTQUNGOztLQUNGLENBQUM7R0FDVyxxQkFBcUIsQ0EyQ2pDO1NBM0NZLHFCQUFxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGFuaW1hdGUsXG4gIHN0YXRlLFxuICBzdHlsZSxcbiAgdHJhbnNpdGlvbixcbiAgdHJpZ2dlclxufSBmcm9tICdAYW5ndWxhci9hbmltYXRpb25zJztcbmltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgRWxlbWVudFJlZixcbiAgRXZlbnRFbWl0dGVyLFxuICBmb3J3YXJkUmVmLFxuICBPdXRwdXQsXG4gIFZpZXdDaGlsZCxcbiAgSW5wdXQsXG4gIE9uSW5pdFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5HX1ZBTFVFX0FDQ0VTU09SLCBGb3JtR3JvdXAsIEZvcm1Db250cm9sIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5pbXBvcnQgeyBBYnN0cmFjdENvbnRyb2xWYWx1ZUFjY2Vzc29yIH0gZnJvbSAnLi4vdXRpbC9hYnN0cmFjdC12YWx1ZS1hY2Nlc3Nvcic7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ21hdC1zZWFyY2gtYmFyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL21hdC1zZWFyY2gtYmFyLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vbWF0LXNlYXJjaC1iYXIuY29tcG9uZW50LnNjc3MnXSxcbiAgYW5pbWF0aW9uczogW1xuICAgIHRyaWdnZXIoJ3NsaWRlSW5PdXQnLCBbXG4gICAgICBzdGF0ZSgndHJ1ZScsIHN0eWxlKHsgd2lkdGg6ICcqJyB9KSksXG4gICAgICBzdGF0ZSgnZmFsc2UnLCBzdHlsZSh7IHdpZHRoOiAnMCcgfSkpLFxuICAgICAgdHJhbnNpdGlvbigndHJ1ZSA9PiBmYWxzZScsIGFuaW1hdGUoJzMwMG1zIGVhc2UtaW4nKSksXG4gICAgICB0cmFuc2l0aW9uKCdmYWxzZSA9PiB0cnVlJywgYW5pbWF0ZSgnMzAwbXMgZWFzZS1vdXQnKSlcbiAgICBdKVxuICBdLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBOR19WQUxVRV9BQ0NFU1NPUixcbiAgICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IE1hdFNlYXJjaEJhckNvbXBvbmVudCksXG4gICAgICBtdWx0aTogdHJ1ZVxuICAgIH1cbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBNYXRTZWFyY2hCYXJDb21wb25lbnQgZXh0ZW5kcyBBYnN0cmFjdENvbnRyb2xWYWx1ZUFjY2Vzc29yPFxuc3RyaW5nXG4+IHtcbiAgQFZpZXdDaGlsZCgnaW5wdXQnLCB7IHN0YXRpYzogZmFsc2UgfSkgaW5wdXRFbGVtZW50OiBFbGVtZW50UmVmO1xuXG4gIEBJbnB1dCgpIGZvcm1Db250cm9sOiBGb3JtQ29udHJvbDtcbiAgQElucHV0KCkgcGxhY2Vob2xkZXIgPSAnJztcblxuICBAT3V0cHV0KCkgb25CbHVyID0gbmV3IEV2ZW50RW1pdHRlcjxzdHJpbmc+KCk7XG4gIEBPdXRwdXQoKSBvbkNsb3NlID0gbmV3IEV2ZW50RW1pdHRlcjx2b2lkPigpO1xuICBAT3V0cHV0KCkgb25FbnRlciA9IG5ldyBFdmVudEVtaXR0ZXI8c3RyaW5nPigpO1xuICBAT3V0cHV0KCkgb25Gb2N1cyA9IG5ldyBFdmVudEVtaXR0ZXI8c3RyaW5nPigpO1xuICBAT3V0cHV0KCkgb25PcGVuID0gbmV3IEV2ZW50RW1pdHRlcjx2b2lkPigpO1xuXG4gIHNlYXJjaFZpc2libGUgPSBmYWxzZTtcblxuICBwdWJsaWMgY2xvc2UoKTogdm9pZCB7XG4gICAgdGhpcy5zZWFyY2hWaXNpYmxlID0gZmFsc2U7XG4gICAgdGhpcy52YWx1ZSA9ICcnO1xuICAgIHRoaXMudXBkYXRlQ2hhbmdlcygpO1xuICAgIHRoaXMub25DbG9zZS5lbWl0KCk7XG4gIH1cblxuICBwdWJsaWMgb3BlbigpOiB2b2lkIHtcbiAgICB0aGlzLnNlYXJjaFZpc2libGUgPSB0cnVlO1xuICAgIHRoaXMuaW5wdXRFbGVtZW50Lm5hdGl2ZUVsZW1lbnQuZm9jdXMoKTtcbiAgICB0aGlzLm9uT3Blbi5lbWl0KCk7XG4gIH1cblxuICBvbkJsdXJyaW5nKHNlYXJjaFZhbHVlOiBzdHJpbmcpIHtcbiAgICBpZighc2VhcmNoVmFsdWUpIHtcbiAgICAgIHRoaXMuc2VhcmNoVmlzaWJsZSA9IGZhbHNlO1xuICAgIH1cbiAgICB0aGlzLm9uQmx1ci5lbWl0KHNlYXJjaFZhbHVlKTtcbiAgfVxuXG4gIG9uRW50ZXJyaW5nKHNlYXJjaFZhbHVlOiBzdHJpbmcpIHtcbiAgICB0aGlzLm9uRW50ZXIuZW1pdChzZWFyY2hWYWx1ZSk7XG4gIH1cblxuICBvbkZvY3Vzc2luZyhzZWFyY2hWYWx1ZTogc3RyaW5nKSB7XG4gICAgdGhpcy5vbkZvY3VzLmVtaXQoc2VhcmNoVmFsdWUpO1xuICB9XG59XG4iXX0=