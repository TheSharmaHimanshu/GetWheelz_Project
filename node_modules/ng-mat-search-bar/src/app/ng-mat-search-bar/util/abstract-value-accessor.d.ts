import { ControlValueAccessor } from '@angular/forms';
export declare abstract class AbstractControlValueAccessor<T> implements ControlValueAccessor {
    value: string;
    /**
     * Invoked when the model has been changed
     */
    onChange: (_: any) => void;
    /**
     * Invoked when the model has been touched
     */
    onTouched: () => void;
    /**
     * Method that is invoked on an update of a model.
     */
    updateChanges(): void;
    /**
     * Writes a new item to the element.
     * @param value the value
     */
    writeValue(value: string): void;
    /**
     * Registers a callback function that should be called when the control's value changes in the UI.
     * @param fn
     */
    registerOnChange(fn: any): void;
    /**
     * Registers a callback function that should be called when the control receives a blur event.
     * @param fn
     */
    registerOnTouched(fn: any): void;
}
