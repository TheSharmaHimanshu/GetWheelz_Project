!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/common"),require("@angular/core"),require("@angular/forms"),require("@angular/material/core"),require("@angular/material/icon"),require("@angular/material/input"),require("@angular/animations")):"function"==typeof define&&define.amd?define("ng-mat-search-bar",["exports","@angular/common","@angular/core","@angular/forms","@angular/material/core","@angular/material/icon","@angular/material/input","@angular/animations"],t):t((e=e||self)["ng-mat-search-bar"]={},e.ng.common,e.ng.core,e.ng.forms,e.ng.material.core,e.ng.material.icon,e.ng.material.input,e.ng.animations)}(this,(function(e,t,n,o,i,r,a,s){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */var c=function(e,t){return(c=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};function u(e,t,n,o){var i,r=arguments.length,a=r<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,o);else for(var s=e.length-1;s>=0;s--)(i=e[s])&&(a=(r<3?i(a):r>3?i(t,n,a):i(t,n))||a);return r>3&&a&&Object.defineProperty(t,n,a),a}var l=function(){function e(){this.onChange=function(e){},this.onTouched=function(){}}return e.prototype.updateChanges=function(){this.onChange(this.value)},e.prototype.writeValue=function(e){this.value=e,this.updateChanges()},e.prototype.registerOnChange=function(e){this.onChange=e},e.prototype.registerOnTouched=function(e){this.onTouched=e},e}(),p=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.placeholder="",t.onBlur=new n.EventEmitter,t.onClose=new n.EventEmitter,t.onEnter=new n.EventEmitter,t.onFocus=new n.EventEmitter,t.onOpen=new n.EventEmitter,t.searchVisible=!1,t}var i;return function(e,t){function n(){this.constructor=e}c(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}(t,e),i=t,t.prototype.close=function(){this.searchVisible=!1,this.value="",this.updateChanges(),this.onClose.emit()},t.prototype.open=function(){this.searchVisible=!0,this.inputElement.nativeElement.focus(),this.onOpen.emit()},t.prototype.onBlurring=function(e){e||(this.searchVisible=!1),this.onBlur.emit(e)},t.prototype.onEnterring=function(e){this.onEnter.emit(e)},t.prototype.onFocussing=function(e){this.onFocus.emit(e)},u([n.ViewChild("input",{static:!1})],t.prototype,"inputElement",void 0),u([n.Input()],t.prototype,"formControl",void 0),u([n.Input()],t.prototype,"placeholder",void 0),u([n.Output()],t.prototype,"onBlur",void 0),u([n.Output()],t.prototype,"onClose",void 0),u([n.Output()],t.prototype,"onEnter",void 0),u([n.Output()],t.prototype,"onFocus",void 0),u([n.Output()],t.prototype,"onOpen",void 0),t=i=u([n.Component({selector:"mat-search-bar",template:'<mat-form-field *ngIf="!formControl" class="mat-search_field" [@slideInOut]="searchVisible">\n  <input #input matInput type="text" [placeholder]="placeholder" [(ngModel)]="value" (ngModelChange)="updateChanges()"\n    (blur)="onBlurring(input.value)" (keyup.enter)="onEnterring(input.value)" (focus)="onFocussing(input.value)" />\n</mat-form-field>\n\n\x3c!-- FORM CONTROL WAY --\x3e\n<mat-form-field *ngIf="formControl" class="mat-search_field" [@slideInOut]="searchVisible">\n  <input #input matInput type="text" [placeholder]="placeholder" [formControl]="formControl" (blur)="onBlurring(input.value)"\n    (keyup.enter)="onEnterring(input.value)" (focus)="onFocussing(input.value)" />\n</mat-form-field>\n\n\n<span class="mat-search_icons" [class.mat-search_icons--active]="searchVisible">\n  <mat-icon class="mat-search_icon-close" (click)="close()" matRipple>close</mat-icon>\n  <mat-icon class="mat-search_icon-search" (click)="open()" matRipple>search</mat-icon>\n</span>\n',animations:[s.trigger("slideInOut",[s.state("true",s.style({width:"*"})),s.state("false",s.style({width:"0"})),s.transition("true => false",s.animate("300ms ease-in")),s.transition("false => true",s.animate("300ms ease-out"))])],providers:[{provide:o.NG_VALUE_ACCESSOR,useExisting:n.forwardRef((function(){return i})),multi:!0}],styles:[":host{position:relative;display:flex;flex-direction:row;align-items:center;justify-content:flex-end;width:24px;height:24px}.mat-search_field{position:absolute;z-index:1;padding:0 24px 0 0}.mat-search_icons{display:block;margin:0;padding:0;position:absolute;top:0;left:0}.mat-search_icons:hover{cursor:pointer}.mat-search_icons .mat-search_icon-close,.mat-search_icons .mat-search_icon-search{transition:.2s cubic-bezier(.4,0,.2,1);position:absolute;top:0;left:0;z-index:2;border-radius:50%}.mat-search_icons .mat-search_icon-close,.mat-search_icons.mat-search_icons--active .mat-search_icon-search{opacity:0;transform:rotate(225deg)}.mat-search_icons.mat-search_icons--active .mat-search_icon-close{opacity:1;z-index:3;visibility:visible;transform:rotate(360deg)}"]})],t)}(l),m=function(){function e(){}return e=u([n.NgModule({imports:[t.CommonModule,o.FormsModule,r.MatIconModule,a.MatInputModule,i.MatRippleModule,o.ReactiveFormsModule],exports:[p],declarations:[p]})],e)}();e.NgMatSearchBarModule=m,e.ɵa=p,e.ɵb=l,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=ng-mat-search-bar.umd.min.js.map